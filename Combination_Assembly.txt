	lw	0	1	n	//load n
	lw	0	2	r	//load r
	lw	0	5	stack	//load stack
	lw	0	6	combin	//load combination address and jump
	jalr	6	7		
	halt				//stop program
	beq	2	0	if	//r==0 do if
	beq	1	2	if	//n==r do if
else	lw	0	6	pos4
	add	5	6	5	//stack+4
	sw	5	1	-3	//store n at stack-3
	sw	5	2	-2	//store r at stack-2
	sw	5	7	-1	//store return address at stack-1
	lw	0	6	neg1	
	add	1	6	1	//n-1
	lw	0	6	combin	//load combination address  and jump
	jalr	6	7	
	sw	5	3	0	//store value from combination(n-1,r) at stack
	lw	0	6	neg1
	add	2	6	2	//r-1
	lw	0	6	combin	//load combination address and jump
	jalr	6	7
	lw	5	6	0	//load value from combination(n-1,r) at stack
	add	3	6	3	//combination(n-1,r)+(combination(n-1,r-1)
	lw	5	7	-1	//load return address at stack-1
	lw	5	2	-2	//load r at stack-2
	lw	5	1	-3	//load n at stack-3
	lw	0	6	neg4
	add	5	6	5	//stack-4
	jalr	7	6
if	lw	0	3	pos1
	jalr	7	6
n	.fill	7
r	.fill	3
combin  .fill   6
pos1	.fill	1
neg1	.fill	-1
pos4	.fill	4
neg4	.fill	-4
stack	.fill	39